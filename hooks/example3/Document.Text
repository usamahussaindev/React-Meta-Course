# React hooks

# def

hooks are functions in react that let you use state and other react features in functional compenents


 # import React, { useState } from 'react';

import { useState } from 'react': This line is using ES6 destructuring syntax to import the useState hook from the 'react' library. The useState hook is a function

import React, { useState } from 'react';


# import points
hooks can only use in functional components
not to use in class components 
can not use with conditional (if-else checks) Components.
not use in loops or any nested  


example of hook const [count, setCount] = useState(0);

It returns an array with two elements: the current state value and a function that lets you update it.

# use to track any type of data like strings, arrays,objects, booleans etc

--- You can only call hooks from React functions, and not regular JavaScript functions. --


Custom hooks offer flexibility and can be used for a wide range of use-cases such as 

1 -form handling,
2 -animation, 
3 -timers, 
4 -and many more. 


# The useRef hook
We use the useRef hook to access a child element directly.

In React, the useRef hook is used to create mutable object properties. It is often used to access and interact with the DOM directly.

